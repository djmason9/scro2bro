//
//  BroBump.m
//  ProjectName
//
//  Created by AuthorName on 4/28/15.
//  Copyright (c) 2015 CompanyName. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "BroBump.h"


@implementation BroBump

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawSperated_handsCanvasWithTop: (CGFloat)top boolean: (BOOL)boolean
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0.96 green: 0.944 blue: 0.153 alpha: 1];

    //// Shadow Declarations
    NSShadow* shadow = [[NSShadow alloc] init];
    [shadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.71]];
    [shadow setShadowOffset: CGSizeMake(0.1, -0.1)];
    [shadow setShadowBlurRadius: 5];

    //// Image Declarations
    UIImage* bottom_handImage = [UIImage imageNamed: @"bottom_handImage.png"];
    UIImage* top_handImage = [UIImage imageNamed: @"top_handImage.png"];

    //// Variable Declarations
    CGFloat expression = -1 * top;

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(0, 0, 100, 100) cornerRadius: 10];
    [color setFill];
    [rectanglePath fill];

    ////// Rectangle Inner Shadow
    CGContextSaveGState(context);
    UIRectClip(rectanglePath.bounds);
    CGContextSetShadowWithColor(context, CGSizeZero, 0, NULL);

    CGContextSetAlpha(context, CGColorGetAlpha([shadow.shadowColor CGColor]));
    CGContextBeginTransparencyLayer(context, NULL);
    {
        UIColor* opaqueShadow = [shadow.shadowColor colorWithAlphaComponent: 1];
        CGContextSetShadowWithColor(context, shadow.shadowOffset, shadow.shadowBlurRadius, [opaqueShadow CGColor]);
        CGContextSetBlendMode(context, kCGBlendModeSourceOut);
        CGContextBeginTransparencyLayer(context, NULL);

        [opaqueShadow setFill];
        [rectanglePath fill];

        CGContextEndTransparencyLayer(context);
    }
    CGContextEndTransparencyLayer(context);
    CGContextRestoreGState(context);



    if (boolean)
    {
        //// Text 2 Drawing
        CGRect text2Rect = CGRectMake(0, 39, 100, 21);
        {
            NSString* textContent = @"Scro! Them!";
            NSMutableParagraphStyle* text2Style = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
            text2Style.alignment = NSTextAlignmentCenter;

            NSDictionary* text2FontAttributes = @{NSFontAttributeName: [UIFont systemFontOfSize: UIFont.labelFontSize], NSForegroundColorAttributeName: UIColor.blackColor, NSParagraphStyleAttributeName: text2Style};

            CGFloat text2TextHeight = [textContent boundingRectWithSize: CGSizeMake(text2Rect.size.width, INFINITY)  options: NSStringDrawingUsesLineFragmentOrigin attributes: text2FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, text2Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(text2Rect), CGRectGetMinY(text2Rect) + (CGRectGetHeight(text2Rect) - text2TextHeight) / 2, CGRectGetWidth(text2Rect), text2TextHeight) withAttributes: text2FontAttributes];
            CGContextRestoreGState(context);
        }
    }


    //// bottom_hand Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 32, (expression + 65.04));
    CGContextScaleCTM(context, 0.04, 0.04);

    CGRect bottom_handRect = CGRectMake(0, 0, 1325, 899);
    UIBezierPath* bottom_handPath = [UIBezierPath bezierPathWithRect: bottom_handRect];
    CGContextSaveGState(context);
    [bottom_handPath addClip];
    CGContextScaleCTM(context, 1.0, -1.0);
    CGContextDrawTiledImage(context, CGRectMake(CGRectGetMinX(bottom_handRect), -CGRectGetMinY(bottom_handRect), bottom_handImage.size.width, bottom_handImage.size.height), bottom_handImage.CGImage);
    CGContextRestoreGState(context);

    CGContextRestoreGState(context);


    //// top_hand Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 9, top);
    CGContextScaleCTM(context, 0.04, 0.04);

    CGRect top_handRect = CGRectMake(0, 0, 1420, 877);
    UIBezierPath* top_handPath = [UIBezierPath bezierPathWithRect: top_handRect];
    CGContextSaveGState(context);
    [top_handPath addClip];
    CGContextScaleCTM(context, 1.0, -1.0);
    CGContextDrawTiledImage(context, CGRectMake(CGRectGetMinX(top_handRect), -CGRectGetMinY(top_handRect), top_handImage.size.width, top_handImage.size.height), top_handImage.CGImage);
    CGContextRestoreGState(context);

    CGContextRestoreGState(context);
}

@end
